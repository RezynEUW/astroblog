[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.11.0","content-config-digest","af38c04c4284c50b","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://yourusername.netlify.app\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":true,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,26,27],"how-to-write-posts",{"id":11,"data":13,"body":21,"filePath":22,"digest":23,"legacyId":24,"deferredRender":25},{"title":14,"description":15,"pubDate":16,"tags":17},"How to Write Posts","A guide to creating MDX posts with code, math, and images",["Date","2025-07-09T00:00:00.000Z"],[18,19,20],"guide","mdx","writing","import ImageGallery from '../../components/ImageGallery.astro';\n\nThis guide explains how to write blog posts for this site using MDX format.\n\n## File Structure\n\nCreate new posts in `src/content/blog/` with the filename format: `your-post-title.mdx`\n\n## Frontmatter\n\nEvery post must start with frontmatter:\n\n```yaml\n---\ntitle: 'Your Post Title'\ndescription: 'A brief description for previews'\npubDate: 2025-07-09\ntags: ['tag1', 'tag2', 'tag3']\n---\n```\n\n## Basic Formatting\n\nUse standard Markdown syntax:\n\n- **Bold text**: `**bold**`\n- *Italic text*: `*italic*`\n- `Inline code`: `` `code` ``\n- [Links](https://example.com): `[text](url)`\n\n## Code Blocks\n\nUse triple backticks with language specification:\n\n````markdown\n```python\ndef example():\n    return \"Hello, World!\"\n```\n````\n\nSupported languages: `python`, `javascript`, `typescript`, `bash`, `json`, `yaml`, and more.\n\n## Mathematical Equations\n\nUse LaTeX syntax for math:\n\nInline math: `$\\alpha + \\beta = \\gamma$` renders as $\\alpha + \\beta = \\gamma$\n\nBlock math:\n```markdown\n$$\n\\frac{\\partial L}{\\partial w} = \\frac{1}{m} \\sum_{i=1}^{m} (h_\\theta(x^{(i)}) - y^{(i)}) x^{(i)}\n$$\n```\n\nRenders as:\n\n$$\n\\frac{\\partial L}{\\partial w} = \\frac{1}{m} \\sum_{i=1}^{m} (h_\\theta(x^{(i)}) - y^{(i)}) x^{(i)}\n$$\n\n## Images and Galleries\n\nImport the ImageGallery component at the top of your post:\n\n```markdown\nimport ImageGallery from '../../components/ImageGallery.astro';\n```\n\nThen use it in your post:\n\n```jsx\n\u003CImageGallery \n  images={[\n    {\n      src: \"/images/example1.jpg\",\n      alt: \"Description of image\",\n      caption: \"Optional caption\"\n    },\n    {\n      src: \"/images/example2.jpg\",\n      alt: \"Another image\",\n      caption: \"Another caption\"\n    }\n  ]}\n  columns={2}\n/>\n```\n\n\u003CImageGallery \n  images={[\n    {\n      src: \"/images/placeholder1.jpg\",\n      alt: \"A picture of a bunny\",\n      caption: \"What a great dog\"\n    }\n  ]}\n/>\n\n\nPlace images in `public/images/` folder.\n\n## Lists\n\nOrdered lists:\n1. First item\n2. Second item\n3. Third item\n\nUnordered lists:\n- First item\n- Second item\n  - Nested item\n  - Another nested item\n\n## Tables\n\n```markdown\n| Algorithm | Time Complexity | Space Complexity |\n|-----------|----------------|------------------|\n| Bubble Sort | O(n²) | O(1) |\n| Quick Sort | O(n log n) | O(log n) |\n| Merge Sort | O(n log n) | O(n) |\n```\n\nRenders as:\n\n| Algorithm | Time Complexity | Space Complexity |\n|-----------|----------------|------------------|\n| Bubble Sort | O(n²) | O(1) |\n| Quick Sort | O(n log n) | O(log n) |\n| Merge Sort | O(n log n) | O(n) |\n\n\n## Publishing\n\n1. Save your `.mdx` file in `src/content/blog/`\n2. Commit and push to GitHub\n3. Netlify will automatically deploy\n\nYour post URL will be: `/blog/your-file-name`","src/content/blog/how-to-write-posts.mdx","84ac9e9bdfa30fc9","how-to-write-posts.mdx",true,"incremental-quantile-estimation",{"id":26,"data":28,"body":34,"filePath":35,"digest":36,"legacyId":37,"deferredRender":25},{"title":29,"description":30,"pubDate":31,"tags":32},"Incremental quantiles","First post",["Date","2025-07-10T00:00:00.000Z"],[33],"statistics","import ImageGallery from '../../components/ImageGallery.astro';\n\nA couple of years ago I thought to myself:\n\n*\"I know how to estimate a moving average, but how does one estimate a moving median?\"*\n\nThis was an interesting question because while moving averages are great, they still suffer greatly from outliers. \nThis led me down a track that ended on a stack overflow thread of incremental median esimation, and by extension, any quantile.\nThe algorithm is simple and uses a frequency approach to the problem.\n\nIn a nutshell, if the distribution is stationary then we expect a 50/50 split of higher and lower observations around our median.\nThe way we translate this into an algorithm is that higher/lower nudges our median estimate, and if the higher/lower observations are in balance then the nudges cancel out.\n\n```python\ndef update_median_estimate(\n        median_estimate: float, \n        observation: float, \n        nudge: float\n    ) -> float:\n    diff = median_estimate - observation\n    sign = diff / abs(diff)\n    new_median_estimate = median_estimate - nudge * sign\n    return new_median_estimate\n```\n\n\u003CImageGallery \n  images={[\n    {\n      src: \"/images/test.png\",\n      alt: \"A picture of a bunny\",\n      caption: \"What a great dog\"\n    }\n  ]}\n/>\n\n...","src/content/blog/incremental-quantile-estimation.mdx","07ca706415d97352","incremental-quantile-estimation.mdx"]